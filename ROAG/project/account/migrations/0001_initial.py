# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-06-09 10:05
from __future__ import unicode_literals

import concurrency.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
from django.contrib.auth.hashers import make_password


def forwards_func(apps, schema_editor):
    User = apps.get_registered_model('auth', 'User')
    admin = User(
        username='masterchief',
        email='masterchief@quantum-bytes.com',
        password=make_password('kdkjk2k23!@jkdfk2'),
        is_superuser=False,
        is_staff=False
    )
    admin.save()


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_first', models.CharField(max_length=15, verbose_name='First name')),
                ('name_last', models.CharField(max_length=15, verbose_name='Last name')),
                ('nickname', models.CharField(default='None', max_length=15, verbose_name='Nickname')),
                ('position', models.CharField(max_length=100, verbose_name='Character position')),
                ('slot', models.IntegerField(null=True, verbose_name='Slot ID')),
                ('is_spawned', models.BooleanField(default=False, verbose_name='Is currently spawned in the world')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('created', models.DateTimeField(editable=False, verbose_name='Created on')),
                ('edited', models.DateTimeField(editable=False, verbose_name='Edited on')),
                ('creator', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='user_creator_char', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('editor', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='user_editor_char', to=settings.AUTH_USER_MODEL, verbose_name='Editor')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name_plural': 'Characters',
            },
        ),
        migrations.CreateModel(
            name='Control',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('function', models.IntegerField(choices=[(0, 'Forward'), (1, 'Backward'), (2, 'Left'), (3, 'Right'), (4, 'Jump'), (5, 'Crouch'), (6, 'Torch'), (7, 'Pickaxe')], verbose_name='Key function')),
                ('key', models.IntegerField(verbose_name='Key as character ascii')),
                ('created', models.DateTimeField(editable=False, verbose_name='Created on')),
                ('edited', models.DateTimeField(editable=False, verbose_name='Edited on')),
                ('creator', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='user_creator_con', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('editor', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='user_editor_con', to=settings.AUTH_USER_MODEL, verbose_name='Editor')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name_plural': 'Controls',
            },
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance', models.FloatField(default=100, validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(200)], verbose_name='View distance')),
                ('gamma', models.FloatField(default=1.0, validators=[django.core.validators.MinValueValidator(0.5), django.core.validators.MaxValueValidator(3.5)], verbose_name='Gamma')),
                ('profileName', models.CharField(max_length=100, null=True, verbose_name='Profile name')),
                ('width', models.IntegerField(default=0, verbose_name='Resolution width')),
                ('height', models.IntegerField(default=0, verbose_name='Resolution height')),
                ('fullscreen', models.BooleanField(default=True, verbose_name='Fullscreen')),
                ('vsync', models.BooleanField(default=False, verbose_name='Vsync')),
                ('reflection', models.BooleanField(default=False, verbose_name='Dynamic reflection')),
                ('parallax', models.BooleanField(default=False, verbose_name='Parallax occlusion')),
                ('motionBlur', models.BooleanField(default=False, verbose_name='Motion Blur')),
                ('refraction', models.BooleanField(default=False, verbose_name='Refraction')),
                ('volumetric', models.BooleanField(default=False, verbose_name='Volumetric shadows')),
                ('filter', models.BooleanField(default=False, verbose_name='Texture filtering')),
                ('resolution', models.IntegerField(choices=[(3, '1280x720'), (4, '1366x768'), (5, '1600x900'), (6, '1920x1080'), (7, '2560x1440'), (11, '1280x800'), (12, '1440x900'), (13, '1680x1050'), (14, '1920x1200'), (15, '2560x1600'), (19, '1280x960'), (20, '1280x1024'), (21, '1600x1200'), (22, '2048x1536'), (23, '2560x2048'), (-1, 'Custom')], default=6, verbose_name='Resolution')),
                ('occlusion', models.IntegerField(choices=[(0, 'Disabled'), (1, 'Ambient occlusion'), (2, 'Light occlusion'), (3, 'Both (GI)')], default=0, verbose_name='Ambient Occlusion and GI')),
                ('shader', models.IntegerField(choices=[(0, 'Low'), (1, 'Medium'), (2, 'High')], default=0, verbose_name='Shader quality')),
                ('texture', models.IntegerField(choices=[(0, 'Low'), (1, 'Medium'), (2, 'High')], default=0, verbose_name='Texture resolution')),
                ('anisotropy', models.IntegerField(choices=[(0, 'Level 1'), (1, 'Level 2'), (2, 'Level 4'), (3, 'Level 8'), (4, 'Level 16')], default=0, verbose_name='Anisotropy')),
                ('multisample', models.IntegerField(choices=[(0, 'No anti-aliasing'), (1, '2x anti-aliasing'), (2, '4x anti-aliasing'), (3, '8x anti-aliasing'), (4, '16x anti-aliasing')], default=0, verbose_name='Anti-aliasing mode')),
                ('sfx', models.IntegerField(choices=[(0, 'Disabled'), (1, 'Light'), (2, 'Fancy'), (3, 'Shiny')], default=0, verbose_name='SFX mode')),
                ('master', models.FloatField(default=80.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Master volume')),
                ('ambient', models.FloatField(default=80.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Ambient volume')),
                ('music', models.FloatField(default=80.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Music volume')),
                ('voice', models.FloatField(default=80.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Voice volume')),
                ('character', models.FloatField(default=80.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Character volume')),
                ('effects', models.FloatField(default=80.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Effects volume')),
                ('mouse_sensitivity', models.FloatField(default=2.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(6.0)], verbose_name='Mouse sensitivity')),
                ('created', models.DateTimeField(editable=False, verbose_name='Created on')),
                ('edited', models.DateTimeField(editable=False, verbose_name='Edited on')),
                ('version', concurrency.fields.IntegerVersionField(default=1, help_text='record revision number')),
                ('controls', models.ManyToManyField(blank=True, null=True, to='account.Control')),
                ('creator', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='user_creator_sett', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('editor', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='user_editor_sett', to=settings.AUTH_USER_MODEL, verbose_name='Editor')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name_plural': 'Settings',
            },
        ),
        migrations.CreateModel(
            name='SettingProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Profile name')),
                ('created', models.DateTimeField(editable=False, verbose_name='Created on')),
                ('edited', models.DateTimeField(editable=False, verbose_name='Edited on')),
                ('creator', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='user_creator_settpro', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('editor', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='user_editor_settpro', to=settings.AUTH_USER_MODEL, verbose_name='Editor')),
            ],
            options={
                'verbose_name_plural': 'Setting profiles',
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=32)),
                ('created', models.DateTimeField(editable=False, null=True, verbose_name='Created on')),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name_plural': 'Tokens',
            },
        ),
        migrations.RunPython(forwards_func, ),
    ]
